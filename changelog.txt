Version 1 - 22-Nov-2010
- Started change log
- Fixed major bug with Point.adjacent_to()
- Refactored SpellEffect class hierarchy
- Added Projectile and Splat spell effects
- Refactored Actor class hierarchy
- Added Monster class

Version 2 - 06-Apr-2011
- Added tooltips for monsters
- Added hoverIntent library

Vection 3 - 07-Apr-2011
- ViewPort class (creating tiles, loading map tiles, larger map support, shifting map, more JQuery)
- Player now uses an instance of Actor

Version 4 - 09-Apr-2011
- More work on diagonal weirdness
- KeyDown movement now relies on Vector rather than directly manipulating CSS top/left properties.
- Added a couple new tiles
- changed viewport shift threshold to 1 to eliminate some weirdness
- Spells now use the Player as the source.
- Monsters will shift and show/hide as the map moves around

Version 5 - 03-Jul-2011
- Rewritten to support HTML5 and canvas drawing. Most of the JQuery is gone. Actually, most of the code is gone.
- Map now attempts to centre the player in the viewport after every move. This eliminates all the weird behaviour from the old algorithm.

Version 6 - 04-Jul-2011
- Sped up logging with JQuery and capped at 1000 lines to prevent performance issues with really big logs.
- Mouse handling routines added. Needs some refactoring.
- Click-and-drag functionality for player movement.
- Clicking for adjacent enemies to make a melee attack.
- Appears to possibly be a memory leak somewhere (FF5 grows large, IE9 and Chrome look fine... could just be that FF5 is shit)
- Upgraded JQuery library to 1.6.2 from 1.4.x (seems to have improved the FF5 memory issues) 

Version 7 - 05-Jul-2011
- HTML5 spell animation engine created.
- Class structure for spell effects created.
  - Added fading and fading+rotating effects for single point spells.
- Added splat animations for monster deaths.
- Test buttons added to demo new animation features. Death Splat button always tries to animate at (5,5) whether or not that square is visible. Fizzles are displayed at raw coordinates.

Version 8 - 12-Sep-2011
- Projectile spell effect added.
- Improvements to animation queue to support chaining spell effects together.
- Fixed fade spell effect to prevent negative alpha.
- Test button for projectile spell test in all directions.
- Magic Missile button added to target a tile by clicking.

Version 9 - 13-Sep-2011
- Scaling and Area spell effects added
- Test button for Area effect added
- Burninate button added to target a tile by clicking.

Version 10 - 14-Sep-2011
- Refactored how ProjectileSpellEffect handles arriving at a target or encountering an obstacle.
- Added actions to spell animations allow spells to have consequences upon resolving.
- Refactored how Monsters are killed.
- Removed several unnecessary debug messages to reduce log clutter.
- Cleaned up process_click()
- Eliminated the remainder of the old JQuery spell system.

Version 11 - 15-Sep-2011
- Add splat_queue to animate splats after all other animations are completed.
- Made the main page less ugly.

Version 12 - 18-Sep-2011
- First version of new tooltips (overrides right-click events on the canvas only).

Version 13 - 19-Sep-2011
- Moved everything into a Git repository
- Cleaned up the tooltip code substantially.
- Preliminary work for enemy AI (monsters will move around randomly or stay put)
- Monsters could theoretically hit you if they get lucky but it doesn't do anything except trigger a poorly constructed sentence in the log.

Version 14 - 14-Oct-2011
- Bug fixes:
  - Random clicks no longer cause turns to occur
  - Tiles are no longer considered adjacent to themselves
- General
  - Melee events can have sources other than the Player
  - Updated melee combat resolution system so that it outputs some messages that are grammatically correct.
  - Added a method for determining line of sight
  - Tooltips will state that you cannot see a tile if it is not within line of sight (i.e. blocked by an obstacle)
  - Various other cleanups
  - Fixed some serious fuck-ups with dragging the Player around with the mouse which weren't immediately apparent until monsters started doing stuff
- Monsters:
  - Added Hill Giant (oh shit!)
- Enemy AI changes:
  - Monsters will use line of sight to determine if they can see you
  - Monsters will move to attack if you are within a certain distance (Rat Mans have bad eyes)
  - Monsters that don't have line of sight or are too far away from you have a 50% chance of just wandering around
  - Certain monsters can see far and have a chance of deciding to cast a spell at you rather than move
- Spell changes:
  - New method for calculating positioning for ProjectileSpellEffect
  - Spells can now have a source actor that is not the Player
  - Added the boulder spell effect
- Debugging
  - Added a Do Turn debug function to intentionally make a nop turn occur
  - Added debug options to freeze all monster movement and prevent monster spell casting
  - Removed several debug messages that were spamming the log
  
Version 15 - 23-Oct-2011
- Bug fixes
  - Right-clicking on the Player no longer causes a NaN error with the line of sight code
- Spell changes:
  - Added ConeSpellEffect for cones in cardinal directions
  
Version 16 - 25-Oct-2011
- General
  - You must drag the mouse cursor at least 12 pixels into a tile before the Player will move. This prevents needing surgical precision to drag the Player diagonally.
  
Version 17 - 30-Oct-2011
- Spell changes
  - Added DiagonalConeSpellEffect for cones in diagonal directions
  - Added support for cone spells to do damage
  - Added FIRE BREATH to the spell menu!
- General
  - Switched to Google CDN for JQuery host so I don't have to maintain a copy of the latest release
  - Allowed Points to be constructed by passing in another Point as the first parameter to the constructor
  
Version 18 - 02-Nov-2011
- Graphics
  - Scaled tile size down to 32x32. It's a more standard size and easier to get tile graphics and makes the player and monsters look closer together when adjacent.
- Spell changes
  - The condition where a monster hits another monster with a projectile will have a proper message in the log.
- Map Generator
  - First generation of random map generator accessible via the "Map Generator" link
- General
  - Added QUnit testing library

Version 19 - 06-Nov-2011
- General
  - Fixed issue where dragging the Player into an obstacle or monster triggered multiple game turns
  - Fixed issue where dragging the Player adjacent to a monster did not result in the monster attempting to make a melee attack
  - Started using a Javascript minimizer for all script files
- Map Generator
  - Implemented more unit tests
  - Rooms will be generated at random sizes and fill the map using the "pack rooms" layout

Version 20 - 07-Nov-2011
- General
  - Streamlined some aspects of the publishing script
- Map Generator
  - More unit tests and refactoring
  
Version 21 - 09-Nov-2011
- Map Generator
  - More unit tests and refactoring
  - Added DoorMaker and some preliminary rules for adding entrances to rooms
  
Version 22 - 11-Nov-2011
- Map Generator
  - Updated DoorMaker so that doors can no longer be adjacent to each other
  - Added TunnelMaker
  
Version 23 - 04-Dec-2011
- General
  - Upgraded to jQuery 1.7.1
- Map Generator
  - Fixed a major problem with TunnelMaker that was creating tunnels within the boundaries of every room
  - Added TunnelCrusher to collapse deadend tunnels 50% of the time
- Debugging
  - Added a "Switch to Random Map" button to demonstrate large maps. Only two tiles are currently used in the conversion step right now.
    - Things look a little funny since certain tiles are meant to hold doors eventually, and the switch process can get you stuck inside a wall. Keep clicking until it works.

Version 24 - 08-Dec-2011
- Inventory
  - Proof of concept work with jQueryUI for creating an inventory system (click the "Inventory TPOC" link on the main page)
  
Version 25 - 26-Dec-2011
- General
  - Switched to XML configuration file with an AJAX pre-loader instead of JSON
  - Cleaned up the game load sequence
  - Moved Monster initialization to the proper location
- Inventory
  - Updated Inventory layout
  
Version 26 - 30-Dec-2011
- Inventory
  - Refactored some of the jQuery UI code for moving items between sortable containers
  - Borders for equipped items are now hidden
  - Cleaned up CSS styles
  - Added a bunch of dummy items to make a more useful demo
  
Version 27 - 02-Jan-2012
- General
  - Incorporated the Inventory TPOC into the main application. Click the Inventory button or press "I" to launch the dialog.
  - Added PlayerActor class 
  - Refactored how Monsters are drawn so the same code can be used for Items that are on the floor
  - Added list of keyboard shortcuts
- Inventory
  - Implemented basic inventory system for tracking items on the floor and items that are equipped or in the Player's bag
  - Added InventoryManager and Item
  - Implemented XML data for Items and Item images
  
Version 28 - 04-Jan-2012
- General
  - Simplified tooltips so they are less annoying to use.
  - Items on the ground are now listed in tooltips
  - Moved Shortcuts button down to beneath the log to save some space

Version 29 - 05-Jan-2012
- Bug fixes
  - ConeEffectSpell was incorrectly using splash damage as its damage value 
- Inventory
  - Multiple items on the same floor tile will now be displayed as a special icon
  - Ported over several more dummy items from the Inventory TPOC
  - Equipping items will now affect how your character looks!
- Spells
  - Refactored spell images to be the same structure as item images
  - Refactored SpellEffect instantiation to be more generic
  
Version 30 - 15-Jan-2012
- General
  - Added DungeonManager and Level classes
  - Refactored map tiles, monsters and items collections so Levels have their own contents (removed the old global arrays)
  - Refactored some debugging code to create the default debug Level

Version 31 - 18-Jan-2012
- General
  - Eliminated last remaining JSON config (tile) and jQuery plugin for parsing (it's built into the recent versions anyways for future use)
  - Refactored Tile to separate passable from the image
  - Added explored, lit and room_id flags to tiles
  - Updated draw_map to draw white squares for unexplored tiles and overlay a 50% alpha black square for unlit tiles
  - Tiles adjacent to the player are marked as explored as you move around.
  - Level now contains a list of room locations 
- Map Generator
  - Redefined how room_id is specified on a room.
  - Room lighting is a 50% chance of lit vs unlit
  - Expanded functionality for creating an entire Level out of a map generation run
- Debugging
  - Expanded test map to include some unexplored tiles
  - Expanded the Test Level creation to accommodate MapGenerator and Tile changes.
  
Version 32 - 20-Jan-2012
- Bug fixes
  - Fixed an undefined value error with AreaSpellEffect and ConeSpellEffect when resolving damage values.
- General
  - Refactored draw_map()
  - Monsters are only drawn if you have a) line of sight and they are in a lit tile OR b) they are directly adjacent to you.
  - For Monsters in category A above, tiles between the Player and the Monster will NOT be revealed
  - Enhanced tooltips to provide more information based on line of sight and exploration
- Debugging
  - Fixed AoE and Cone tests to support the Level changes
  - Expanded the test map to include some dark tiles with Monsters and items.
  - Added some Monsters and Items to unexplored tiles.
  - Added Reveal Map test option
  - Added DETECT_MONSTERS debug flag
  - Added Debug Flags popup to allow for setting flag values without having to edit the code constantly.
  
Version 33 - 28-Jan-2012
- General
  - Added the Verbs menu and preliminary system for handling actions that are not casting or melee attacks
  - Added Search action to check tiles that are adjacent to the Player for secret doors and reveal them!
  - Moved the final images into organized sub-directories
  - Refactored tooltips to handle listing items more generically
  - Line-of-sight will now check what is "transparent" rather than if a tile is passable (i.e closed doors are passable but not transparent)
- Map Generator
  - Added Doors (open, closed, secret) along with appropriate changes to obstacles, etc
  
Version 34 - 29-Jan-2012
- General
  - Added a common function to standardize how random events are determined
  - Doors that have not been discovered will no longer be drawn on the map.
  - Monsters can no longer occupy the same tile as the Player when the Player is in a door tile (oops)
  - Fixed an issue where clicking on a door would trigger a melee attack on "undefined."
  - Added Open verb to open doors that are adjacent to the Player.
  - Added Close verb to close doors that are adjacent to the Player.
    - Doors can be blocked from being closed by a monster or items on the floor.
  - Updated Shortcuts popup with new keyboard shortcut information
  - Doors can be smashed to bits by spells!
- Bug fixes
  - Fixed an issue where Splats resulting from a Monster-on-Monster kill (hill giant boulders) would not animate until the Player did something

Version 35 - 12-Feb-2012
- General
  - Added texture bundles to provide some variety in the type of images that get displayed for floors and walls
  - Inverted the chance for a door to be marked as secret (literally everything was showing up as a secret door)
  - In Prod mode, the map will now default to starting the Player in the center of a random room rather than on the debug level
  - Added area to display HP and Mana values

Version 36 - 13-Feb-2012
- General
  - Refactored some Dungeon code to use callbacks to manipulate tiles (no more duplicated loops)
- Spells
  - Added MapFadeOut and GAME OVER MAN test for eventual Player death usage.
  - Added Light spell to light up rooms or adjacent tiles around the target tile
  
Version 37 - 14-Feb-2012
- General
  - Added GameTime to keep track of time in game for RPG nerdiness and event queueing
  - As a test, everytime you move, the game clock increments by 3 seconds
  
Version 38 - 15-Feb-2012
- General
  - Moving repeatedly into a wall by pressing the arrow keys will no longer trigger a bunch of turns (didn't notice until testing out the GameTime code)
  - Moving, attacking and casting spells now increments the game clock by one round (six seconds)
  - Search is now a "long action" which takes one minute to complete
  - Long actions are interruptible if a monster appears adjacent to the Player or the animation queue fills up at any point during the action
  - The Player will regain 1 hit point every minute
  - Added Rest Until Healed verb to wait X minutes until the the player reaches max HP or is interrupted
  - Spells now cost mana. If you don't have enough mana, you can't cast the spell.
  - Added Sleep Until Mana is Restored verb to attempt to sleep 8 hours.
    - If interrupted at any point while sleeping, you will regain a percentage of mana based on how long you slept
    
Version 39 - 18-Feb-2012
- General
  - Fixed a bug that delayed cone effects from animating until after the next Player move
  - Implemented some significant performance enhancements in the line-of-sight algorithms that was affecting the Sleep action
    - Think 83 million calls down to 1.4 million (!)
    - Only attempt a line-of-sight calculation from a monster if the Player is within its sight range
    - Only check for the presence of a door if we are looking at a door tile specifically
    - Allocate some objects outside of several loops
  - The random map will now include a number of RATMANS equal to the number of rooms on the map
  - Decreased the size of the random map from 100x100 to 50x50 and decreased the maximum size of a room from 13 to 11

Version 40 - 22-Feb-2012
- General
  - Rearranged some code to allow for the Prod version to spawn monsters during level generation.
  - Turned off debug messages in the Prod version (they can be turned on via the Debug Mode debug flag).
  
Version 41 - 27-Mar-2012
- General
  - Added Dungeon Level indicator
  - Added stair location generation
- Bug fixes
  - Fixed door tiles on the debug map so that they are now marked as entrances
  
Version 42 - 02-Apr-2012
- General
  - Added Climb Down Stairs and Climb Up Stairs verbs
  - Stairs can be used to navigate between dungeon levels. Generated levels will save all information until the game is reset.
  - Going down stairs will start the Player at the Stairs UP location for the next level. If that level has never been visited before, a new level is generated.
  - Going up stairs will start the Player at the Stairs DOWN location for the previous level.
  
Version 43 - 04-Apr-2012
- General
  - Implemented Widget class (room decorations)
  - Converted stairs to be widgets
  - Levels will now have one Stairs DOWN for every 5 rooms, and one Stairs UP for every Stairs DOWN that existed on the previous level (Level 1 has no Stairs UP)
  - Using stairs will always take you to the corresponding staircase on the next level (although the location may not correspond geographically! No one said dungeons should make sense)
- Bug fixes
  - Keyboard actions can no longer be used while a dialog is open (except for T when the Inventory is displayed)
  
Version 44 - 06-Apr-2012
- General
  - Upgraded to jQuery 1.7.2 and jQuery UI 1.8.18
  - Stair descriptions are now displayed in tooltips
  - Reduced map size from 60x60 to 50x50. Maps seem to be much more manageable now.
  - Added the Minimap (click the Map button or press M) to display everywhere that you've explored! No more getting lost!
- Bug fixes
  - Going up stairs will now mark the adjacent tiles as explored
- Debugging
  - Added function to reveal all secret doors
  
Version 45 - 14-May-2012
- General
  - Added jStorage library.
  - TPOC work for loading/saving data from LocalStorage.
  
Version 46 - 07-Jul-2012
- General
  - Improved load/save TPOC with jQuery extend.
  
Version 47 - 15-Jul-2012
- General
  - Refactored Actor and Item so that they no longer store references to DOM images (allows easy JSON conversion)
  - Updated load code so that the Player can now be loaded.

Version 48 - 16-Jul-2012
- Storage
  - Updated load code so that Items can now be loaded.
  - Added generic method to Storage for loading collections.
  - Inventory will reload and display equipped items.
  
Version 49 - 20-Jul-2012
- Storage
  - Added load code to all remaining objects as required.
  - Load/save can now be used to save and restore an entire game (up to the point where localStorage is full for the domain).
  
Version 50 - 23-Jul-2012
- General
  - Cleaned up some CSS items
  - Fixed an IE display issue in the Stats section
- Storage
  - Implemented Load UI and TPOC for Save UI
  - Refactored underlying structure of GameStorage to support multiple saved games.

TODO
============
- BUG: Some wall tiles get marked as "too dark to see" based on what's on one side vs the other... need some kind of directional tooltip?
- BUG: Double right-clicking on a cell that contains something will display a tooltip that contains no information
- BUG: Monsters can spawn ontop of the Player
- BUG: Monsters going through doors that have been explored but are not within sight appear to magically open... need a way to hide this
- Add more text options so the log doesn't look so boring
- Props (traps, more widgets, etc)
- Area spells need to set their primary target to the last square that they were in, NOT the square where an obstacle is encountered
- Items in the inventory need detailed tooltips
- Item stats, etc
- Gold
- Double-clicking in inventory to take/drop items
- Tooltips need to be split into two sections (one for detection and one for seeing/map showing)... split off num_items?
- Rings need to be handled as a special item for multiple slots
- Monster wandering vs aggressive vs passive... if you hit a monster, it should keep coming at you until it dies
- Spawn items inside rooms and when monsters die
- Load/Save - Implement Save UI  - catch point where localStorage is full
  - Limit to 3 slots? Remember maxlength on save description
  - ESC on Load popup proceeds with the action... it should behave like cancel
  - Need method to delete saved games
  - JS confirmations before load/overwrite
- Investigate whether or not max_monster_id needs special updating when loading (probably does)
